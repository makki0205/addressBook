/* -------------------------------------------------------------------------- */
/* define.h																	  */
/*																			  */
/*																			  */
/* -------------------------------------------------------------------------- */
/* 番号		更新履歴							  日付		氏名			*/
/* -------------------------------------------------------------------------- */
/* 000		新規作成								2015/2/3	葛巻 大樹	  */
/* -------------------------------------------------------------------------- */

/* -------------------------------------------------------------------------- */
/* includeファイル															  */
/* -------------------------------------------------------------------------- */
#include "ktconio.h"
/* -------------------------------------------------------------------------- */
/* 定数定義																	  */
/* -------------------------------------------------------------------------- */

/* -------------------------------------------------------------------------- */
/* 構造体定義																 */
/* -------------------------------------------------------------------------- */
#ifndef __STRUCT__
    #define __STRUCT__
    struct BOOK
    {
        SCHR name[30];
        SCHR kana[30];
        SCHR post[8];
        SCHR address[80];
        SCHR number[18];
    };

    struct STATUS
    {
        SCHR flg[10];
    };

#endif

/* -------------------------------------------------------------------------- */
/* プロトタイプ宣言(private)												  */
/* -------------------------------------------------------------------------- */

/* -------------------------------------------------------------------------- */
/* 関数名		:                                                              */
/* 機能名		:                                                              */
/* 機能概要	   :                                                              */
/* 引数		 :                  :                :							*/
/* 戻り値		:                  :                :                          */
/* 作成日		:                                                              */
/* -------------------------------------------------------------------------- */
int systemset ( void );

/* -------------------------------------------------------------------------- */
/* 関数名		:                                                              */
/* 機能名		:                                                              */
/* 機能概要	   :                                                              */
/* 引数		 :                  :                :							*/
/* 戻り値		:                  :                :                          */
/* 作成日		:                                                              */
/* -------------------------------------------------------------------------- */
int record_print ( struct BOOK *data );

/* -------------------------------------------------------------------------- */
/* 関数名		:                                                              */
/* 機能名		:                                                              */
/* 機能概要	   :                                                              */
/* 引数		 :                  :                :                          */
/* 戻り値		:                  :                :                          */
/* 作成日		:                                                              */
/* -------------------------------------------------------------------------- */
int post_print ( char *post );

/* -------------------------------------------------------------------------- */
/* 関数名		:                                                              */
/* 機能名		:                                                              */
/* 機能概要	   :                                                              */
/* 引数		 :                  :                :							*/
/* 戻り値		:                  :                :                          */
/* 作成日		:                                                              */
/* -------------------------------------------------------------------------- */
int select ( int max );

/* -------------------------------------------------------------------------- */
/* 関数名		:                                                              */
/* 機能名	    :                                                              */
/* 機能概要	   :                                                              */
/* 引数        :                   :               :                          */
/* 戻り値		:                   :               :                          */
/* 作成日		:                                                              */
/* -------------------------------------------------------------------------- */
void select_print ( int cursor, int max );

/* -------------------------------------------------------------------------- */
/* 関数名		:                                                              */
/* 機能名		:                                                              */
/* 機能概要	   :                                                              */
/* 引数		 :                  :                :                          */
/* 戻り値		:                  :                :                          */
/* 作成日		:                                                              */
/* -------------------------------------------------------------------------- */
int menu_print ( const char *item );

/* -------------------------------------------------------------------------- */
/* 関数名		:                                                              */
/* 機能名		:                                                              */
/* 機能概要	   :                                                              */
/* 引数		 :                  :                :                          */
/* 戻り値		:                  :                :                          */
/* 作成日		:                                                              */
/* -------------------------------------------------------------------------- */
int menu ( struct BOOK *data );

/* -------------------------------------------------------------------------- */
/* 関数名		:                                                              */
/* 機能名		:                                                              */
/* 機能概要	   :                                                              */
/* 引数		 :                  :                :                          */
/* 戻り値		:                  :                :                          */
/* 作成日		:                                                              */
/* -------------------------------------------------------------------------- */
int statuswrite ( struct STATUS *status );

/* -------------------------------------------------------------------------- */
/* 関数名		:                                                              */
/* 機能名		:                                                              */
/* 機能概要	   :                                                              */
/* 引数		 :                  :                :                          */
/* 戻り値		:                  :                :                          */
/* 作成日		:                                                              */
/* -------------------------------------------------------------------------- */
int statusread ( struct STATUS *status );

/* -------------------------------------------------------------------------- */
/* 関数名		:                                                              */
/* 機能名		:                                                              */
/* 機能概要	   :                                                              */
/* 引数		 :                  :                :                          */
/* 戻り値		:                  :                :                          */
/* 作成日		:                                                              */
/* -------------------------------------------------------------------------- */
int bookread ( struct BOOK *data, int index );

/* -------------------------------------------------------------------------- */
/* 関数名		:                                                              */
/* 機能名		:                                                              */
/* 機能概要	   :                                                              */
/* 引数		 :                  :                :                          */
/* 戻り値		:                  :                :                          */
/* 作成日		:                                                              */
/* -------------------------------------------------------------------------- */
int bookwrite ( struct BOOK *data, int index );


/* -------------------------------------------------------------------------- */
/*  データ追加用                                                              */
/* -------------------------------------------------------------------------- */

/* -------------------------------------------------------------------------- */
/* 関数名		:                                                              */
/* 機能名		:                                                              */
/* 機能概要	   :                                                              */
/* 引数		 :                  :                :                          */
/* 戻り値		:                  :                :                          */
/* 作成日		:                                                              */
/* -------------------------------------------------------------------------- */
int adddata ( void );

/* -------------------------------------------------------------------------- */
/* 関数名		: addname													   */
/* 機能名		: 名前を追加													  */
/* 機能概要	   : を追加しcheckを行う　										  */
/* 引数		 : structBOOK*		: data			 : 一レコード分の情報       */
/* 戻り値		: int			   : OK				: 成功　　				   */
/* 作成日		: 葛巻大樹							2016/02/05				   */
/* -------------------------------------------------------------------------- */
int addname ( struct BOOK *data );

/* -------------------------------------------------------------------------- */
/* 関数名		: addkana													   */
/* 機能名		: カナを追加する                                               */
/* 機能概要	   : カナを追加しcheckを行う                                      */
/* 引数		 : structBOOK*		: data			 : 一レコード分の情報       */
/* 戻り値		: int			   : OK				: 成功　　				   */
/* 作成日		: 葛巻大樹							2016/02/05				   */
/* -------------------------------------------------------------------------- */
int addkana ( struct BOOK *data );

/* -------------------------------------------------------------------------- */
/* 関数名		: addpost													   */
/* 機能名		: 郵便番号を追加　											   */
/* 機能概要	   : 郵便番号を追加しcheckを行								 　 */
/* 引数		 : structBOOK*		: data			 : 一レコード分の情報       */
/* 戻り値		: int			   : OK				: 成功　　				   */
/* 作成日		: 葛巻大樹							2016/02/05				   */
/* -------------------------------------------------------------------------- */
int addpost ( struct BOOK *data );

/* -------------------------------------------------------------------------- */
/* 関数名		: addaddress												   */
/* 機能名		: 住所を追加													  */
/* 機能概要	   : 住所を追加しcheckを行う										 */
/* 引数		 : structBOOK*		: data			 : 一レコード分の情報       */
/* 戻り値		: int			   : OK				: 成功　　				   */
/* 作成日		: 葛巻大樹							2016/02/05				   */
/* -------------------------------------------------------------------------- */
int addaddress ( struct BOOK *data );

/* -------------------------------------------------------------------------- */
/* 関数名		: addnumber													   */
/* 機能名		: 電話番号を追加											    */
/* 機能概要	   : 電話番号を追加しcheckを行う                                  */
/* 引数		 : structBOOK*		: data			 : 一レコード分の情報       */
/* 戻り値		: int			   : OK				: 成功　　				   */
/* 作成日		: 葛巻大樹							2016/02/05				   */
/* -------------------------------------------------------------------------- */
int addnumber ( struct BOOK *data );

/* -------------------------------------------------------------------------- */
/* データ参照用															  　*/
/* -------------------------------------------------------------------------- */

/* -------------------------------------------------------------------------- */
/* 関数名		: viewdata													   */
/* 機能名		: データ参照												      */
/* 機能概要	   : データ参照用のメイン関数									  */
/* 戻り値		:				  :                :                          */
/* 作成日		: 葛巻大樹							2016/02/13				   */
/* -------------------------------------------------------------------------- */
int viewdata ( void );

/* -------------------------------------------------------------------------- */
/* 関数名		: view_print                                                   */
/* 機能名		: データを印字                                                 */
/* 機能概要	   : 一人分のデータを印字                                         */
/* 引数		 : struct BOOK*     : data           :	データの先頭アドレス 	  */
/* 戻り値		:                  :                :                          */
/* 作成日		: 葛巻大樹                           2016/02/14                */
/* -------------------------------------------------------------------------- */
int view_print (struct BOOK* data );

/* -------------------------------------------------------------------------- */
/* 関数名		: kana_find													   */
/* 機能名		: カナ検索を行う											    */
/* 機能概要	   : カナ検索を行って表示する									  */
/* 戻り値		: 				   : 				: 						   */
/* 作成日		: 葛巻大樹							2016/02/15				   */
/* -------------------------------------------------------------------------- */
int kana_find(void);
/* -------------------------------------------------------------------------- */
/* 関数名		: post_find													   */
/* 機能名		: 郵便番号検索を行う											  */
/* 機能概要	   : 郵便番号検索を行って表示する								    */
/* 引数		 : 					: 				 :							*/
/* 戻り値		: 				   : 				: 						   */
/* 作成日		: 葛巻大樹							2016/02/15				   */
/* -------------------------------------------------------------------------- */
int post_find(void);
/* -------------------------------------------------------------------------- */
/* 関数名		: view_post_print											   */
/* 機能名		: 参照画面の郵便リアルタイム検索実装						      */
/* 機能概要	   : 															  */
/* 引数		 : SCHR*			: data			 : データ先頭アドレス　　　	*/
/* 戻り値		: 				   : 				: 						   */
/* 作成日		: 葛巻大樹							2016/02/15				   */
/* -------------------------------------------------------------------------- */
int view_post_print(SCHR* data);
/* -------------------------------------------------------------------------- */
/*              Copyright HAL College of Technology & Design				  */
/* -------------------------------------------------------------------------- */
