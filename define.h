/* -------------------------------------------------------------------------- */
/* define.h																	  */
/*																			  */
/*																			  */
/* -------------------------------------------------------------------------- */
/* 番号		更新履歴							  日付		氏名			*/
/* -------------------------------------------------------------------------- */
/* 000		新規作成								2015/2/3	葛巻 大樹	  */
/* -------------------------------------------------------------------------- */

/* -------------------------------------------------------------------------- */
/* includeファイル															  */
/* -------------------------------------------------------------------------- */
#include "ktconio.h"
/* -------------------------------------------------------------------------- */
/* 定数定義																	  */
/* -------------------------------------------------------------------------- */

/* -------------------------------------------------------------------------- */
/* 構造体定義																 */
/* -------------------------------------------------------------------------- */
#ifndef __STRUCT__
    #define __STRUCT__
    struct BOOK
    {
        SCHR name[30];
        SCHR kana[30];
        SCHR post[8];
        SCHR address[80];
        SCHR number[18];
    };

    struct STATUS
    {
        SCHR flg[10];
    };

#endif

/* -------------------------------------------------------------------------- */
/* プロトタイプ宣言(private)												  */
/* -------------------------------------------------------------------------- */

/* -------------------------------------------------------------------------- */
/* 関数名		: systemset                                                    */
/* 機能名		: ファイルがなければ構築する                                   */
/* 機能概要	   : ファイルを作成                                               */
/* 戻り値		: SINT             : OK             : 正常終了                 */
/* 			   :				  : NG			   : 異常終了				  */
/* 作成日		: 葛巻大樹                                                     */
/* -------------------------------------------------------------------------- */
int systemset ( void );

/* -------------------------------------------------------------------------- */
/* 関数名		: record_print                                                 */
/* 機能名		: １レコードの出力                                             */
/* 機能概要	   : １レコードの出力                                             */
/* 引数		 : BOOK*            : data           : レコードのデータ			*/
/* 戻り値		: SINT             : OK             : 正常終了                 */
/* 			   :				  : NG			   : 異常終了				  */
/* 作成日		: 葛巻大                            2016/02/1                  */
/* -------------------------------------------------------------------------- */
int record_print ( struct BOOK *data );

/* -------------------------------------------------------------------------- */
/* 関数名		: post_print                                                   */
/* 機能名		: 郵便番号をプリントする                                       */
/* 機能概要	   : 郵便番号をー付きで出力                                       */
/* 引数		 : char*            : post           : 郵便番号アドレス         */
/* 戻り値		: SINT             : OK             : 正常終了                 */
/* 			   :				  : NG			   : 異常終了				  */
/* 作成日		: 葛巻大樹                          2016/02/16                 */
/* -------------------------------------------------------------------------- */
int post_print ( char *post );

/* -------------------------------------------------------------------------- */
/* 関数名		: select                                                       */
/* 機能名		: 選ぶ                                                         */
/* 機能概要	   : maxまでの値で矢印が動き選べる                                */
/* 引数		 : int              : max            : 最大値                   */
/* 戻り値		: SINT             : val            : 選ばれた値               */
/* 			   :				  : NG			   : 異常終了				  */
/* 作成日		: 葛巻大樹                          2016/02/16                 */
/* -------------------------------------------------------------------------- */
int select ( int max );

/* -------------------------------------------------------------------------- */
/* 関数名		: select_print                                                 */
/* 機能名	    : セレクタを印字                                               */
/* 機能概要	   : セレクタを印字する（→）                                     */
/* 引数        : int               : cursor        :                          */
/* 			   : int			   : max		   :						  */
/* 作成日		: 葛巻大樹                          2016/02/16                 */
/* -------------------------------------------------------------------------- */
void select_print ( int cursor, int max );

/* -------------------------------------------------------------------------- */
/* 関数名		: menu_print                                                   */
/* 機能名		: メニューを印字                                               */
/* 機能概要	   : メニューをセレクト用に印字                                   */
/* 引数		 : const char*      : item           : 表示コンテンツ           */
/* 戻り値		: SINT             : OK             : 正常終了                 */
/* 			   :				  : NG			   : 異常終了				  */
/* 作成日		: 葛巻大樹                          2016/02/16                 */
/* -------------------------------------------------------------------------- */
int menu_print ( const char *item );

/* -------------------------------------------------------------------------- */
/* 関数名		: menu                                                         */
/* 機能名		: アドレス帳メニュー                                           */
/* 機能概要	   : アドレス帳各種メニュー                                       */
/* 戻り値		: SINT             : OK             : 正常終了                 */
/* 			   :				  : NG			   : 異常終了				  */
/* 作成日		: 葛巻大樹                          2016/02/16                 */
/* -------------------------------------------------------------------------- */
int menu ( void );

/* -------------------------------------------------------------------------- */
/* 関数名		: statuswrite                                                  */
/* 機能名		: ステータスを書く                                             */
/* 機能概要	   : ステータスを書く                                             */
/* 引数		 : STATUS*          : stats          : 構造体ポインタ           */
/* 戻り値		: SINT             : OK             : 正常終了                 */
/* 			   :				  : NG			   : 異常終了				  */
/* 作成日		: 葛巻大樹                          2016/02/16                 */
/* -------------------------------------------------------------------------- */
int statuswrite ( struct STATUS *status );

/* -------------------------------------------------------------------------- */
/* 関数名		: statusread                                                   */
/* 機能名		: ステータスを読む                                             */
/* 機能概要	   : ステータスを読み格納する                                     */
/* 引数		 : STATUS*          : stats          : 構造体ポインタ           */
/* 戻り値		: SINT             : OK             : 正常終了                 */
/* 			   :				  : NG			   : 異常終了				  */
/* 作成日		: 葛巻大樹                          2016/02/16                 */
/* -------------------------------------------------------------------------- */
int statusread ( struct STATUS *status );

/* -------------------------------------------------------------------------- */
/* 関数名		: bookread                                                     */
/* 機能名		: BOOKデータを読む                                             */
/* 機能概要	   : index番目のデータを読む                                      */
/* 引数		 : STATUS*          : data           : 構造体ポインタ           */
/* 			   : int			  : index		   : 添え字				   */
/* 戻り値		: SINT             : OK             : 正常終了                 */
/* 			   :				  : NG			   : 異常終了				  */
/* 作成日		: 葛巻大樹                          2016/02/16                 */
/* -------------------------------------------------------------------------- */
int bookread ( struct BOOK *data, int index );

/* -------------------------------------------------------------------------- */
/* 関数名		: bookwrite                                                    */
/* 機能名		: BOOKデータを書く                                             */
/* 機能概要	   : index番目のデータを書く                                      */
/* 引数		 : STATUS*          : data           : 構造体ポインタ           */
/* 			   : int			  : index		   : 添え字				   */
/* 戻り値		: SINT             : OK             : 正常終了                 */
/* 			   :				  : NG			   : 異常終了				  */
/* 作成日		: 葛巻大樹                          2016/02/16                 */
/* -------------------------------------------------------------------------- */
int bookwrite ( struct BOOK *data, int index );


/* -------------------------------------------------------------------------- */
/*  データ追加用                                                              */
/* -------------------------------------------------------------------------- */

/* -------------------------------------------------------------------------- */
/* 関数名		: adddata                                                      */
/* 機能名	    : データの追加                                                 */
/* 機能概要	   : データを追加する                                             */
/* 戻り値		: SINT             : OK             : 正常終了                 */
/* 			   :				  : NG			   : 異常終了				  */
/* 作成日		: 葛巻大樹                          2016/02/1                  */
/* -------------------------------------------------------------------------- */
int adddata ( void );

/* -------------------------------------------------------------------------- */
/* 関数名		: addname													   */
/* 機能名		: 名前を追加													  */
/* 機能概要	   : を追加しcheckを行う                                          */
/* 引数		 : structBOOK*		: data			 : 一レコード分の情報       */
/* 戻り値		: int			   : OK				: 成功                     */
/* 作成日		: 葛巻大樹							2016/02/05				   */
/* -------------------------------------------------------------------------- */
int addname ( struct BOOK *data );

/* -------------------------------------------------------------------------- */
/* 関数名		: addkana													   */
/* 機能名		: カナを追加する                                               */
/* 機能概要	   : カナを追加しcheckを行う                                      */
/* 引数		 : structBOOK*		: data			 : 一レコード分の情報       */
/* 戻り値		: int			   : OK				: 成功                     */
/* 作成日		: 葛巻大樹							2016/02/05				   */
/* -------------------------------------------------------------------------- */
int addkana ( struct BOOK *data );

/* -------------------------------------------------------------------------- */
/* 関数名		: addpost													   */
/* 機能名		: 郵便番号を追加                                               */
/* 機能概要	   : 郵便番号を追加しcheckを行								    */
/* 引数		 : structBOOK*		: data			 : 一レコード分の情報       */
/* 戻り値		: int			   : OK				: 成功                     */
/* 作成日		: 葛巻大樹							2016/02/05				   */
/* -------------------------------------------------------------------------- */
int addpost ( struct BOOK *data );

/* -------------------------------------------------------------------------- */
/* 関数名		: addaddress												   */
/* 機能名		: 住所を追加													  */
/* 機能概要	   : 住所を追加しcheckを行う										 */
/* 引数		 : structBOOK*		: data			 : 一レコード分の情報       */
/* 戻り値		: int			   : OK				: 成功                     */
/* 作成日		: 葛巻大樹							2016/02/05				   */
/* -------------------------------------------------------------------------- */
int addaddress ( struct BOOK *data );

/* -------------------------------------------------------------------------- */
/* 関数名		: addnumber													   */
/* 機能名		: 電話番号を追加											    */
/* 機能概要	   : 電話番号を追加しcheckを行う                                  */
/* 引数		 : structBOOK*		: data			 : 一レコード分の情報       */
/* 戻り値		: int			   : OK				: 成功                     */
/* 作成日		: 葛巻大樹							2016/02/05				   */
/* -------------------------------------------------------------------------- */
int addnumber ( struct BOOK *data );

/* -------------------------------------------------------------------------- */
/* データ参照用															    */
/* -------------------------------------------------------------------------- */

/* -------------------------------------------------------------------------- */
/* 関数名		: viewdata													   */
/* 機能名		: データ参照												      */
/* 機能概要	   : データ参照用のメイン関数									  */
/* 戻り値		:				  :                :                           */
/* 作成日		: 葛巻大樹							2016/02/13				   */
/* -------------------------------------------------------------------------- */
int viewdata ( void );

/* -------------------------------------------------------------------------- */
/* 関数名		: view_print                                                   */
/* 機能名		: データを印字                                                 */
/* 機能概要	   : 一人分のデータを印字                                         */
/* 引数		 : struct BOOK*     : data           :	データの先頭アドレス    */
/* 戻り値		:                  :                :                          */
/* 作成日		: 葛巻大樹                           2016/02/14                */
/* -------------------------------------------------------------------------- */
int view_print ( struct BOOK *data );

/* -------------------------------------------------------------------------- */
/* 関数名		: index_find												   */
/* 機能名		: 番号検索													   */
/* 機能概要	   : 番号こ検索を行う											  */
/* 戻り値		: int			   : index			: 番号を返す			      */
/* 作成日		: 葛巻大樹							2016/02/16				   */
/* -------------------------------------------------------------------------- */
int index_find ( void );

/* -------------------------------------------------------------------------- */
/* 関数名		: kana_find													   */
/* 機能名		: カナ検索を行う											    */
/* 機能概要	   : カナ検索を行って表示する									  */
/* 戻り値		: int			   : index			: 番号を返す			      */
/* 作成日		: 葛巻大樹							2016/02/15				   */
/* -------------------------------------------------------------------------- */
int kana_find ( void );

/* -------------------------------------------------------------------------- */
/* 関数名		: post_find													   */
/* 機能名		: 郵便番号検索を行う											  */
/* 機能概要	   : 郵便番号検索を行って表示する								    */
/* 戻り値		: int			   : index			: 番号を返す			      */
/* 作成日		: 葛巻大樹							2016/02/15				   */
/* -------------------------------------------------------------------------- */
int post_find ( void );

/* -------------------------------------------------------------------------- */
/* 関数名		: view_post_print											   */
/* 機能名		: 参照画面の郵便リアルタイム検索実装						      */
/* 機能概要	   :                                                              */
/* 引数		 : SCHR*			: data			 : データ先頭アドレス       */
/* 戻り値		:                  :                :                          */
/* 作成日		: 葛巻大樹							2016/02/15				   */
/* -------------------------------------------------------------------------- */
int view_post_print ( SCHR *data );

/* -------------------------------------------------------------------------- */
/*  更新																	    */
/* -------------------------------------------------------------------------- */
/* -------------------------------------------------------------------------- */
/* 関数名		: update													   */
/* 機能名		: 更新を行う												      */
/* 機能概要	   : 更新を行う													 */
/* 引数		 : SINT				: index			 : 更新を行うデータ			*/
/* 戻り値		: SINT			   : OK				: 正常終了				   */
/*             : SINT			  : ERR            : 異常終了				  */
/* 作成日		: 葛巻大樹							2016/02/16				   */
/* -------------------------------------------------------------------------- */
int update ( SINT index );

/* -------------------------------------------------------------------------- */
/* 削除																	    */
/* -------------------------------------------------------------------------- */

/* -------------------------------------------------------------------------- */
/* 関数名		: delete													   */
/* 機能名		: データの削除                                                 */
/* 機能概要	   : データを削除する											  */
/* 引数		 : SINT				: index			 : 削除するデータの情報	  */
/* 戻り値		: SINT			   : OK				: 正常終了				   */
/*             : SINT			  : ERR            : 異常終了				  */
/* 作成日		: 葛巻大樹							2016/02/16				   */
/* -------------------------------------------------------------------------- */
int deletedata ( SINT index );

/* -------------------------------------------------------------------------- */
/*              Copyright HAL College of Technology & Design				  */
/* -------------------------------------------------------------------------- */
